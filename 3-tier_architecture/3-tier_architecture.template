{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": { "default": "Subnet CIDRs" },
                    "Parameters": [ "Az1PublicSubnet1Cidr", "Az1PrivateSubnet1Cidr", "Az2PublicSubnet1Cidr", "Az2PrivateSubnet1Cidr" ]
                }
            ]
        }
    },
    "Parameters": {
        "VpcCidr": {
            "Description": "CIDR Range for VPC",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.0.0.0/16"
        },
        "Az1PublicSubnet1Cidr": {
            "Description": "CIDR Range for PubSubnet1",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.0.1.0/24"
        },
        "Az1PrivateSubnet1Cidr": {
            "Description": "CIDR Range for PrivateSubnet1",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.0.2.0/24"
        },
        "Az2PublicSubnet1Cidr": {
            "Description": "CIDR Range for PubSubnet2",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.0.3.0/24"
        },
        "Az2PrivateSubnet1Cidr": {
            "Description": "CIDR Range for PrivateSubnet2",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "Default": "10.0.4.0/24"
        }
    },
    "Mappings": {
        "AzMaps": {
            "us-east-1": {"AZ1": "us-east-1a", "AZ2": "us-east-1b"}
        }
    },
    "Resources": {
        "Vpc": {
            "Type" : "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Ref": "VpcCidr"},
                "EnableDnsHostnames" : true,
                "EnableDnsSupport" : true,
                "Tags" : [ 
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "VPC"]]}} 
                ]
            }
        },
        "IGW": {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "IGW"]]}}
                ]
                }
        },
        "AttachIGWtoVPC": {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "InternetGatewayId" : {"Fn::GetAtt": ["IGW", "InternetGatewayId"]},
                "VpcId" : { "Ref" : "Vpc" }
            }
        },
        "Az1PublicSubnet": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::FindInMap": ["AzMaps", { "Ref" : "AWS::Region" }, "AZ1"]},
                "CidrBlock" : { "Ref" : "Az1PublicSubnet1Cidr" },
                "MapPublicIpOnLaunch" : true,
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "PublicSubnet", "AZ1"]]}}
                ],
                "VpcId" : { "Ref" : "Vpc" }
                }
        },
        "Az1PrivateSubnet": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::FindInMap": ["AzMaps", { "Ref" : "AWS::Region" }, "AZ1"]},
                "CidrBlock" : { "Ref" : "Az1PrivateSubnet1Cidr" },
                "MapPublicIpOnLaunch" : true,
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "PrivateSubnet", "AZ1"]]}}
                ],
                "VpcId" : { "Ref" : "Vpc" }
                }
        },
        "Az2PublicSubnet": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::FindInMap": ["AzMaps", { "Ref" : "AWS::Region" }, "AZ2"]},
                "CidrBlock" : { "Ref" : "Az2PublicSubnet1Cidr" },
                "MapPublicIpOnLaunch" : true,
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "PublicSubnet", "AZ2"]]}}
                ],
                "VpcId" : { "Ref" : "Vpc" }
                }
        },
        "Az2PrivateSubnet": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::FindInMap": ["AzMaps", { "Ref" : "AWS::Region" }, "AZ2"]},
                "CidrBlock" : { "Ref" : "Az2PrivateSubnet1Cidr" },
                "MapPublicIpOnLaunch" : true,
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "PrivateSubnet", "AZ2"]]}}
                ],
                "VpcId" : { "Ref" : "Vpc" }
                }
        },
        "Az1NatGatewayElasticIP": {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc",
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "Az1NatGatewayElasticIP"]]}}
                ]
            }
        },
        "Az2NatGatewayElasticIP": {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc",
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "Az2NatGatewayElasticIP"]]}}
                ]
            }
        },
        "Az1NatGateway": {
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : {"Fn::GetAtt": ["Az1NatGatewayElasticIP", "AllocationId"]},
                "ConnectivityType" : "public",
                "SubnetId" : {"Fn::GetAtt": ["Az1PublicSubnet", "SubnetId"]},
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "Az1NatGateway"]]}}
                ]
            }
        },
        "Az2NatGateway": {
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : {"Fn::GetAtt": ["Az2NatGatewayElasticIP", "AllocationId"]},
                "ConnectivityType" : "public",
                "SubnetId" : {"Fn::GetAtt": ["Az2PublicSubnet", "SubnetId"]},
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "Az2NatGateway"]]}}
                ]
            }
        },
        "Az1PublicRouteTable": {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "Vpc" },
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "Az1PublicRouteTable"]]}}
                ]
            }
        },
        "Az1PublicRoute": {
            "Type" : "AWS::EC2::Route",
            "Properties": {
                "GatewayId" : {"Fn::GetAtt": ["IGW", "InternetGatewayId"]},
                "DestinationCidrBlock" : "0.0.0.0/0",
                "RouteTableId" : {"Fn::GetAtt": ["Az1PublicRouteTable", "RouteTableId"]},
            }
        },
        "Az2PublicRouteTable": {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "Vpc" },
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "Az2PublicRouteTable"]]}}
                ]
            }
        },
        "Az2PublicRoute": {
            "Type" : "AWS::EC2::Route",
            "Properties": {
                "GatewayId" : {"Fn::GetAtt": ["IGW", "InternetGatewayId"]},
                "DestinationCidrBlock" : "0.0.0.0/0",
                "RouteTableId" : {"Fn::GetAtt": ["Az2PublicRouteTable", "RouteTableId"]},
            }
        },
        "Az1PrivateRouteTable": {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "Vpc" },
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "Az1PrivateRouteTable"]]}}
                ]
            }
        },
        "Az1PrivateRoute": {
            "Type" : "AWS::EC2::Route",
            "Properties": {
                "NatGatewayId" : {"Fn::GetAtt": ["Az1NatGateway", "NatGatewayId"]},
                "DestinationCidrBlock" : "0.0.0.0/0",
                "RouteTableId" : {"Fn::GetAtt": ["Az1PrivateRouteTable", "RouteTableId"]},
            }
        },
        "Az2PrivateRouteTable": {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "Vpc" },
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "Az2PrivateRouteTable"]]}}
                ]
            }
        },
        "Az2PrivateRoute": {
            "Type" : "AWS::EC2::Route",
            "Properties": {
                "NatGatewayId" : {"Fn::GetAtt": ["Az2NatGateway", "NatGatewayId"]},
                "DestinationCidrBlock" : "0.0.0.0/0",
                "RouteTableId" : {"Fn::GetAtt": ["Az2PrivateRouteTable", "RouteTableId"]},
            }
        },
        "Az1PublicRoutableSubnetAssociation": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : {"Fn::GetAtt": ["Az1PublicRouteTable", "RouteTableId"]},
                "SubnetId" : {"Fn::GetAtt": ["Az1PublicSubnet", "SubnetId"]}
            }
        },
        "Az2PublicRoutableSubnetAssociation": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : {"Fn::GetAtt": ["Az2PublicRouteTable", "RouteTableId"]},
                "SubnetId" : {"Fn::GetAtt": ["Az2PublicSubnet", "SubnetId"]}
            }
        },
        "Az1PrivateRoutableSubnetAssociation": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : {"Fn::GetAtt": ["Az1PrivateRouteTable", "RouteTableId"]},
                "SubnetId" : {"Fn::GetAtt": ["Az1PrivateSubnet", "SubnetId"]}
            }
        },
        "Az2PrivateRoutableSubnetAssociation": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : {"Fn::GetAtt": ["Az2PrivateRouteTable", "RouteTableId"]},
                "SubnetId" : {"Fn::GetAtt": ["Az2PrivateSubnet", "SubnetId"]}
            }
        },
        "NetworkACL": {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "Vpc" },
                "Tags" : [
                    {"Key" : "Name", "Value" : {"Fn::Join" : ["-", [{"Ref" : "AWS::StackName"}, "NetworkACL"]]}}
                ]
                }
        },
        "NaclInbound1": {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "CidrBlock" : "0.0.0.0/0",
                "NetworkAclId" : {"Fn::GetAtt": ["NetworkACL", "Id"]},
                "PortRange" : {
                    "From": 22,
                    "To": 22
                },
                "Protocol" : 6,
                "RuleAction" : "allow",
                "RuleNumber" : 100
            }
        },
        "NaclInbound2": {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "CidrBlock" : "0.0.0.0/0",
                "NetworkAclId" : {"Fn::GetAtt": ["NetworkACL", "Id"]},
                "PortRange" : {
                    "From": 32700,
                    "To": 65535
                },
                "Protocol" : 6,
                "RuleAction" : "allow",
                "RuleNumber" : 110
            }
        },
        "NaclOutbound1": {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "CidrBlock" : "0.0.0.0/0",
                "Egress" : true,
                "NetworkAclId" : {"Fn::GetAtt": ["NetworkACL", "Id"]},
                "PortRange" : {
                    "From": 22,
                    "To": 22
                },
                "Protocol" : 6,
                "RuleAction" : "allow",
                "RuleNumber" : 100
            }
        },
        "NaclOutbound2": {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "CidrBlock" : "0.0.0.0/0",
                "Egress" : true,
                "NetworkAclId" : {"Fn::GetAtt": ["NetworkACL", "Id"]},
                "PortRange" : {
                    "From": 32700,
                    "To": 65535
                },
                "Protocol" : 6,
                "RuleAction" : "allow",
                "RuleNumber" : 110
            }
        }
    }
}